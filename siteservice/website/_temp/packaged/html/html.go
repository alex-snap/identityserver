// Code generated by go-bindata.
// sources:
// siteservice/website/index.html
// siteservice/website/registration.html
// siteservice/website/login.html
// siteservice/website/base.html
// siteservice/website/error.html
// siteservice/website/apidocumentation.html
// siteservice/website/smsconfirmation.html
// siteservice/website/emailconfirmation.html
// DO NOT EDIT!

package html

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _indexHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x58\xef\x8e\xdb\xb8\x11\xff\xbe\x4f\x31\x51\x0b\xe8\x0a\x58\x56\xec\xf5\x7a\x13\x54\x36\x70\xd8\x1c\x8a\x00\x2d\xee\x70\xbb\x45\x11\x1c\x0a\x83\x2b\x8d\x44\xe6\x28\x52\x47\x8e\xfc\xe7\x3e\xdd\x83\xb4\x2f\x97\x27\x29\x48\xca\x5e\x79\xbd\xd9\x75\xec\x04\xf5\x17\x49\xa3\x99\xdf\x0c\x7f\x9c\x19\x8e\x9c\xbd\x7a\xf7\xe3\xcd\xdd\x87\x9f\x7e\x00\x4e\xb5\x9c\x5f\x64\xee\x02\x92\xa9\x6a\x16\xa1\x8a\x9c\x00\x59\x31\xbf\x00\xc8\x6a\x24\x06\x9c\xa8\x49\xf0\xb7\x56\x2c\x67\xd1\x8d\x56\x84\x8a\x92\xbb\x4d\x83\x11\xe4\xe1\x69\x16\x11\xae\x29\x75\x30\x7f\x85\x9c\x33\x63\x91\x66\x2d\x95\xc9\x9b\x08\xd2\x07\x1c\xc5\x6a\x9c\x45\x4b\x81\xab\x46\x1b\xea\x59\xaf\x44\x41\x7c\x56\xe0\x52\xe4\x98\xf8\x87\x01\x08\x25\x48\x30\x99\xd8\x9c\x49\x9c\x8d\x86\xaf\x23\x0f\x44\x82\x24\xce\xdf\x53\x6c\xe1\x83\x6e\xe1\x47\x25\x85\xc2\x2c\x0d\x62\xa7\x20\x85\xfa\x15\x0c\xca\x59\xc4\x9a\x46\x62\x42\xba\xcd\x79\x22\x72\xad\x92\xc6\x60\xae\xeb\x46\x5b\x2c\x22\xb0\xe2\x77\xb4\xb3\xe8\xea\x7a\x7d\x75\x1d\x01\x37\x58\xce\xa2\x94\x59\x8b\x64\x53\x51\x57\xe9\x81\xb5\xd7\x1c\x36\xaa\x8a\xd2\x53\x1c\x8d\x46\x93\xf5\x68\x34\x39\xca\x55\xa7\x7b\xba\xb3\xeb\xf1\xfa\x7a\x7c\x94\x2b\xaf\x79\xc6\xaa\x26\x93\xf5\x68\x72\xe4\xaa\x82\xee\xe9\xce\xa6\xaf\xd7\xd3\xd7\x47\xb9\xf2\x9a\x67\xac\x6a\xfc\x7a\x3d\x1a\x1f\xe7\xaa\xd3\x3d\x63\xaf\xa6\xeb\xeb\xe9\x71\x7b\xe5\x34\xcf\x58\xd5\xd5\x78\x3d\xba\x3a\x2e\x2d\x3a\xdd\x27\x9d\x39\x85\x08\x68\xd3\xe0\x2c\x12\x35\xab\x30\x75\x5a\x4f\xa0\x96\x6c\x19\xc0\xde\x4e\xd7\xa3\xb7\x21\xf2\x5d\x30\x41\x76\x3e\xf8\xdb\xe9\xfa\x11\xb4\x97\x9c\x0f\x7c\x39\x5e\x5f\x8e\xf7\x80\xbd\xe4\x2b\xd0\x31\x5d\x8f\x1e\x91\xe1\x24\x5f\x01\x78\xfc\x66\x1f\x76\xfc\x66\x3d\x1a\xbf\x89\x0e\x5a\xb0\xdb\x6e\x91\x33\x12\x5a\x25\x4e\xd2\x6b\xc5\xef\xc9\xc6\xbd\xce\x7a\x68\x5b\xdb\xbe\xf5\x9d\x90\x78\xa3\xa5\x36\x3d\x88\x3f\x8d\xd9\x35\xb2\xcb\x83\xf5\x58\xda\x48\xb4\x1c\x91\xb6\x8b\xe8\xd6\x90\x5b\x9b\xfa\x97\xc3\xdc\xda\x2f\x33\x2b\xb5\xa2\x84\xad\xd0\xea\x1a\x87\xb5\x50\x8f\x11\xbc\x41\x4c\x5c\x98\xa2\x61\x86\x36\x9d\xa9\x41\xab\x5b\x93\xa3\x4d\x57\x28\x65\x29\x11\x69\xe1\xa0\xac\xb3\x8f\xbd\xdf\xf8\xc1\x6f\x1c\x36\x21\xf6\x87\x9c\x53\x78\x31\xc2\x03\x87\x4c\x55\xad\x64\x66\x51\x33\x42\x23\x98\xdc\x0a\x92\xad\x60\x17\xbc\xc7\xb6\xb9\x11\x0d\x81\x35\xf9\x13\xc1\x77\xa6\x1f\x77\x77\xc3\x8f\x36\x9e\x67\x69\x30\x3a\xc1\x3e\x61\x4a\xb8\x38\x7c\x0c\x67\x63\x19\xc1\x5e\x04\xfa\x2c\x41\x3d\x20\xcb\xdc\x04\xf0\xfb\x36\xaa\xe8\xcb\xa3\x7a\x81\xed\x93\x02\x4c\xc8\x30\x65\x25\x23\x3c\x94\xbc\x18\xe9\x11\xa8\x89\xd4\xac\x40\x93\x58\x62\x24\xf2\xa4\x14\x12\x8f\xd4\xfa\x2a\xde\x39\x53\x85\x44\x93\x48\x5d\x3d\xff\xf6\x04\x6f\xff\xfc\xf9\xfd\xf3\xfb\xe8\x4f\x2c\x85\x8a\x6c\xda\x30\xca\x39\xda\xe7\xb3\xb1\xa7\x9f\xeb\xba\xd6\x2f\x6c\x69\x4f\xdd\x72\x66\xb0\xe8\x2e\xcf\x2f\xe3\xd0\xaa\x10\x06\x73\x12\x4b\xb4\xa9\x9b\x93\xd1\x9c\x01\x50\x6a\x4d\x5f\x0e\x10\xac\x6e\xd1\xb8\x81\xf9\xb3\xc6\xe1\xe4\xf0\x4d\xeb\x23\x5b\xb2\x20\xf5\xfd\xc5\xfd\xb6\xbd\xa3\xd6\x45\x2b\xf1\xbb\x58\x32\x55\x08\x55\x35\xac\x42\xd6\x34\xf1\x00\x7e\x89\x55\xf5\x8f\xae\x5e\xe2\x41\x67\xe5\x7e\xb1\x20\xbb\xd1\xad\xf6\x07\xc4\x30\x84\x14\x0f\x1e\x89\x03\x33\x07\xe2\x10\xf9\x1e\x1c\xc4\x0d\x73\x43\xbe\x1b\x59\x38\x0d\x77\xd9\x16\xff\xfb\x2f\x3d\xad\x61\xae\x55\x29\xaa\xef\x7e\x89\xff\xbc\xd3\xf8\xc9\xe8\xa5\x08\x5e\x76\xb2\x1b\xaf\xf6\x39\xd3\xba\xb8\xe3\x58\x0b\x55\xf5\x4d\x83\xa4\x67\xf8\x40\x66\x96\x86\x2f\xa1\xec\x5e\x17\x1b\xc8\x25\xb3\x76\x16\x71\x5d\xa3\xa3\xc9\x7d\x28\x15\x62\x09\xaa\x4a\x58\xd3\xcc\xa2\x7d\x06\xdd\x5b\x41\x36\xd9\xe8\x36\x09\x8b\x4f\x02\x27\x20\x75\x25\x14\x18\xac\x84\x25\x34\xf3\x2c\x7d\x52\x6d\x7e\x71\x91\xbd\x4a\x12\xb8\xfd\xfb\xfb\x77\x3f\xdc\xc2\xed\xdd\xf7\x3f\xdf\x41\x92\x74\x3e\x45\x31\x8b\xac\x14\x05\x8e\xc2\x81\xe1\x64\x5d\x78\xdd\x39\xdc\x6d\x74\xc6\xc7\xdb\x17\x2b\x2e\x08\xc1\xe5\xc3\x82\x49\x51\xa9\x45\x8e\x8a\xd0\x44\x0f\xe4\xb9\x92\xf2\xc6\x0b\x51\xa0\x22\x41\x9b\x05\xe9\x26\x9e\x7f\xd0\xad\x81\x10\x1d\x6c\xdf\x64\x29\x1f\x7f\x1d\x17\xf7\x9a\x48\xd7\xf1\x5c\x28\xd8\x78\x47\x2b\x05\xae\xd3\xd8\xad\x8b\x2c\x2d\xc4\xd2\x6d\x46\xb8\xec\xad\x7f\xfc\xd9\xf5\x43\x17\x5d\xef\xd5\x6f\xad\x26\xb4\x0b\xa7\xc1\x84\x42\xb3\x2b\x86\x8c\x5f\xee\xeb\xbc\xb0\x06\xaf\xb4\x08\x8c\x2c\x1a\x83\x16\x55\x8e\xf1\x3c\xcc\x4c\xb0\x15\x40\x8d\x4c\x59\x10\xce\x9c\xe5\x6e\x5e\x1a\xc2\x8d\xae\x1b\xa6\x04\x5a\x50\x88\x45\x58\xf0\x96\x09\x58\x71\x91\x73\x27\xeb\x20\x08\x84\x82\x42\x94\x25\x1a\xf7\xb0\x62\x1b\x3b\x80\x02\x1b\xf4\x89\x06\x5a\xb9\xe4\x85\xdc\x43\x6e\x06\xd0\xa0\xb1\x5a\x81\x36\x61\x16\x5b\xd3\x30\x4b\xf9\x65\x47\x43\x20\xef\x79\x32\xaf\xbe\x4d\x32\xb9\xe6\xdc\x2a\x37\x32\xe2\x2e\x9f\xa0\x27\x04\xbd\x44\x03\x4b\x66\x84\x6e\x2d\xe4\x9c\x29\x85\xd2\x02\x53\xc5\xd9\x49\xd6\x77\xdd\xcb\xb3\x07\x4e\x3b\xa6\x2c\xdc\xb7\x04\x82\x62\x0b\x4c\x3a\x9e\xdd\x2e\x1c\x93\x7f\xd3\xff\x63\xfe\x55\x46\xa8\x9c\xc7\xf3\x4f\x7f\xfc\xe7\x8e\x63\x48\x86\xbf\x79\x19\x10\xd7\x6d\xc5\x09\x74\x09\x6e\x34\x26\xee\xf2\x85\x23\x70\x56\xa8\x98\xe0\x1e\x4b\x6d\xf0\x15\xfc\x8b\x33\x02\x51\xc2\x0d\x37\xc2\x52\xcd\xec\xc0\x29\x75\xc6\x03\x28\x34\x5a\x15\xd3\xae\x97\xe6\xba\x46\x28\x8d\xae\x81\x81\x25\x6d\x70\x78\x88\x30\x1c\x0e\x5d\x22\x72\xd6\xf8\xdb\x50\x02\x0c\xa4\x20\x92\x08\xf7\x82\xa0\x76\xae\x3f\xfd\xf1\xdf\x87\xe4\x04\xc8\x44\x5d\x85\xd3\xae\xf7\x5d\x53\x98\xc4\x62\x6b\x6d\xf8\xa8\xf1\x64\xcc\x22\x89\x25\x85\x09\x3f\x10\x37\xd9\x12\xc7\x5a\xe2\xda\x2c\xdc\x57\xca\xa2\x32\x6c\xb3\x47\x58\x61\x16\x1e\x2a\x9e\xbf\x33\x43\xb8\x75\xb7\x90\xa5\x7c\xb2\xc3\xb9\x37\xe9\x93\xf7\x27\x6d\xcc\x43\xd6\x09\xad\x76\x8d\x2e\x9e\x7f\xaf\xfa\xb5\x8e\xaa\x57\x04\x6e\x7f\x84\x05\xa5\x09\xd8\xbd\x6e\x29\x54\x76\x28\x05\x57\xd1\xee\xb1\xe9\x0e\xad\x41\x97\xa8\x5e\x6f\xc5\xb5\xef\x18\xcc\x20\x10\x93\xbf\x3a\x20\xd2\xae\x71\x84\x6e\x72\x62\x2b\xb8\xfc\x36\xad\xc0\x4f\x0b\xa1\x09\xdc\xba\x5b\x68\x1b\x17\x6d\xe1\xba\x80\x50\xa5\x36\xb5\xe7\xec\xec\xba\x0f\x7e\xb6\x15\xef\x6a\x5b\x2b\xb9\x01\x66\xa1\x6e\x73\xee\xae\x8e\xb3\x15\x53\x74\x4c\x91\x4f\x5e\x22\xe3\xdb\xd5\xb8\x5f\x48\x3c\x7f\xa7\x43\xd9\x02\x2b\x0d\x13\x85\xe3\xcc\x72\xbd\x0a\xe7\x47\xc9\x72\x04\xa6\x36\xb5\xaf\xc8\xc0\xab\xcb\x97\x1e\xa1\x61\xb9\xc2\xf2\x60\xe9\x35\xb4\xab\xe2\x30\x43\xee\x52\xcb\x35\x5d\xe7\xc6\xb6\x06\xbb\xd3\x98\x38\x9a\x3d\x28\x61\xc1\xb2\x12\x8f\xc8\xa8\x47\x83\x4d\x18\xfe\x0e\x07\x9e\x4e\xbe\x35\xbb\xc8\x52\x37\x6e\xf9\xe9\xcb\xff\x3f\xfd\xbf\x00\x00\x00\xff\xff\xc2\xbe\xfa\x29\xb0\x16\x00\x00")

func indexHtmlBytes() ([]byte, error) {
	return bindataRead(
		_indexHtml,
		"index.html",
	)
}

func indexHtml() (*asset, error) {
	bytes, err := indexHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "index.html", size: 5808, mode: os.FileMode(509), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _registrationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x98\x41\x73\xdb\x36\x13\x86\xef\xfe\x15\xf8\xf0\x1d\x74\x09\x44\x4b\xb1\x25\x27\x11\x35\xd3\x71\xdb\x19\x9f\xd2\x71\x9d\x43\xa6\xed\x78\x10\x70\x45\xc2\x06\x01\x06\xbb\x94\xa9\x74\xfa\xdf\x3b\x20\x29\x95\xb6\x65\x99\xb2\xa4\x8b\xc8\xc5\xfb\x3e\x8b\xe5\x42\x20\xec\xd9\xff\x7e\xfe\x7c\x79\xf3\xf5\xb7\x5f\x58\x46\xb9\x99\x9f\xcc\xc2\x17\x33\xd2\xa6\x31\x07\xcb\x99\x32\x12\x31\xe6\xdf\x52\x1e\xc6\x40\x26\xf3\x13\xc6\x18\x9b\xe5\x40\x92\x65\x44\x85\x80\xef\xa5\x5e\xc6\xfc\xd2\x59\x02\x4b\xe2\x66\x55\x00\x67\xaa\xb9\x8b\x39\x41\x45\x51\x60\x7e\x62\x2a\x93\x1e\x81\xe2\x92\x16\xe2\x82\x47\x5d\x90\x95\x39\xc4\x7c\xa9\xe1\xa1\x70\x9e\x3a\xf6\x07\x9d\x50\x16\x27\xb0\xd4\x0a\x44\x7d\xf3\x8e\x69\xab\x49\x4b\x23\x50\x49\x03\xf1\x68\x78\xca\x5b\x14\x69\x32\x30\xbf\x86\x54\x23\x79\x49\xda\x59\x26\xd8\x15\x0d\x90\x7d\x75\x25\xfb\x6c\x8d\xb6\x30\x8b\x1a\x55\xe3\x30\xda\xde\x33\x0f\x26\xe6\xb2\x28\x0c\x08\x72\xa5\xca\x84\x56\xce\x8a\xc2\x83\x72\x79\xe1\x10\x12\xce\x50\xff\x00\x8c\xf9\xf9\xb4\x3a\x9f\x72\x96\x79\x58\xc4\x3c\x92\x88\x40\x18\xe9\x3c\x8d\x9e\xb9\x6b\xe5\xb0\xb0\xe9\xa6\xce\x3d\x53\x8d\x46\x67\xd5\x68\x74\xd6\x2b\x59\xab\x3d\x24\xdd\x74\x5c\x4d\xc7\xbd\x92\xd5\xca\x83\x2a\x3b\x3b\xab\x46\x67\x3d\x2b\x6b\xb4\x87\xa4\x9b\x9c\x56\x93\xd3\x5e\xc9\x6a\xe5\x41\x95\x8d\x4f\xab\xd1\xb8\x5f\xb2\x56\x7b\x50\xcf\x26\xd5\x74\xd2\xaf\x67\x41\x79\x50\x65\xe7\xe3\x6a\x74\xde\x6f\x81\xb4\xda\x17\xd2\x05\x09\x67\xb4\x2a\x20\xe6\x3a\x97\x29\x44\x41\xb7\x85\xbb\x90\xcb\x06\xf7\x61\x52\x8d\x3e\x34\xb3\xdf\x4c\xa7\x89\x1d\x03\xff\x61\x52\x3d\x81\xd7\x91\x63\xa0\xdf\x8f\xab\xf7\xe3\x47\xe8\x3a\x72\x94\x87\x32\xa9\x46\x4f\x1e\x49\x88\x1c\x05\x3d\xbe\x78\x0c\x1e\x5f\x54\xa3\xf1\xd6\xfd\x3a\xb4\x5e\xab\x7a\xa3\x15\x21\xd2\xd9\xb7\xaf\x08\x07\x9d\x5d\x77\x9b\x3b\xc7\xae\xff\x46\x1b\xb8\x74\xc6\xf9\x0e\xe4\xff\x63\x39\x05\xf9\x7e\x4b\x55\x48\x2b\x03\x98\x01\xd0\xba\x14\xca\xb4\x4f\x0a\xe9\x69\xd5\xd6\x24\x6d\x5a\x1a\xe9\x6f\x73\x49\xe0\xb5\x34\xeb\x80\x58\x07\x86\xb9\xb6\x43\x85\xc8\x7b\xd0\x5b\xa6\x42\x8c\xea\xc1\xda\xd7\x67\x5a\x1d\xe3\xc2\x59\x12\xf2\x01\xd0\xe5\xb0\xc9\xfd\x88\x51\x5b\x06\xcf\x2a\xf1\x80\xae\xf4\x0a\x30\x7a\x00\x63\x16\x06\x80\x6e\x03\x0c\x03\x61\x50\x67\x1e\xfc\x97\x79\xd0\x34\x7b\x50\xbf\x78\x83\xa0\xcd\x50\x2b\x9a\xeb\xf0\xf9\xc3\xa6\x7f\x7e\x54\xc6\xc9\xfb\xbf\xde\x85\x1b\xb1\xbe\x1e\xae\xaf\xd9\xdf\x1b\x71\xf8\x24\x1a\x0b\x23\x57\x1f\x99\x75\x16\x3e\x6d\x86\xfe\x69\xe8\x51\x8b\x9f\x45\xcd\x19\xe1\x64\xf6\xcd\x25\x2b\x66\x53\x21\x8b\x22\xe6\x9a\x70\xe5\x4a\x57\xaf\x85\xa1\xef\xbc\xa0\x79\x90\x20\x79\xad\x48\x24\xfa\xf1\x69\x43\x13\x8a\x95\x2b\x45\x63\x13\x01\x0c\x9e\x35\x6e\xf0\xf3\x59\xb4\x55\x10\x72\x27\x7a\x19\xb8\xe1\x3c\xb1\x46\x3e\x78\x59\x14\xe0\xf9\x7c\x16\x25\x7a\x39\x6f\x34\xed\x58\x51\x62\xb6\x19\x38\x99\xa1\xf2\xba\x20\x86\x5e\x6d\x69\x46\xbb\x8a\xee\x36\x57\xc3\x3b\x1c\xcc\x67\x51\x63\x9a\xef\xeb\x16\xd2\xea\xb0\x20\xeb\x05\x71\x18\x29\x07\x44\x99\x02\x1e\x01\xe5\x5d\x79\x94\x29\x49\xaf\xe5\x2b\x98\x17\x7f\xb8\x1d\x0c\xca\x70\xe2\xfb\xb1\x9e\x11\x3f\x60\x46\xca\xb9\x7b\xfd\xf6\x67\xf4\xca\x6e\xf2\x86\x32\x05\x79\x69\xd1\x48\x82\xe7\x91\x57\xea\xed\xc1\x14\xc6\x85\xdf\x84\x40\x92\xa4\x95\x58\x68\x03\x3d\x55\x47\xc8\x9d\x49\x9b\x18\xf0\xc2\xb8\x74\xf7\xe8\xde\xb9\xbe\x7b\xe5\x12\x10\x29\x58\xf0\x92\x9c\x8f\xee\xd6\xb1\x23\x61\x6e\xbf\xdc\xfc\x7a\xf1\xa6\xf2\x1b\xff\x93\xdb\xbd\x48\x5f\xae\xaf\x76\x2d\xf2\xfa\x6c\x66\xc1\x12\x46\x85\x24\x95\x01\xee\x5a\xc8\x1d\xb5\x72\x79\xee\x76\xae\xd1\x8e\x18\x33\xe9\x21\x69\xbf\x76\x4d\xff\xb9\x47\x39\xbb\xd0\xe9\xef\xe0\xc3\xdf\x6c\xfb\x59\x13\xed\x41\x91\x5e\x02\x46\xcd\x66\xfe\x66\xfb\xc2\x39\x3a\xc0\xbe\x94\x46\x27\xf5\x0b\xaa\x67\x2b\x36\xb5\x97\x96\xfc\x4a\x68\xbb\x70\x3d\xdb\xf2\x3c\x39\x81\xd1\xb6\x28\xa9\x67\xab\xba\xaf\xd3\x47\x37\x3f\x15\x45\xcf\x07\xf0\x22\x62\xbf\x2e\xbe\x88\xb9\x74\x96\xbc\x33\xa6\x77\x47\x5e\x9e\x50\x8e\xc7\x83\x5d\x03\x82\x4d\x76\x22\xa3\x70\x8c\xa9\x8f\x35\xf5\x7f\x47\xfe\x0d\x00\x00\xff\xff\x39\x8c\x20\x84\x2e\x11\x00\x00")

func registrationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_registrationHtml,
		"registration.html",
	)
}

func registrationHtml() (*asset, error) {
	bytes, err := registrationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "registration.html", size: 4398, mode: os.FileMode(436), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _loginHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\xdf\x6f\xdb\x36\x10\x7e\xcf\x5f\xc1\x69\x0f\x7e\x29\xad\xd8\x4d\xec\xa4\xb5\x0c\x04\x69\x0b\x04\xd8\xd0\x62\x49\x1e\x8a\x6d\x08\x58\xea\x2c\x31\xa1\x48\x95\x77\xb2\xe5\x0c\xfb\xdf\x07\x4a\xb2\xe7\x24\x8e\x23\xff\x7a\xb1\x74\xfc\xee\xfb\xf8\x91\x67\xea\xe4\xd1\x2f\x9f\xbe\x5e\xde\x7c\xff\xf6\x99\xa5\x94\xe9\xf1\xd1\xc8\x7f\x31\x2d\x4c\x12\x05\x60\x02\x26\xb5\x40\x8c\x82\x1f\x49\xe0\xc7\x40\xc4\xe3\x23\xc6\x18\x1b\x65\x40\x82\xa5\x44\x39\x87\x9f\x85\x9a\x46\xc1\xa5\x35\x04\x86\xf8\xcd\x3c\x87\x80\xc9\xfa\x2e\x0a\x08\x4a\x0a\x3d\xe7\x47\x26\x53\xe1\x10\x28\x2a\x68\xc2\xcf\x82\x70\x95\xc8\x88\x0c\xa2\x60\xaa\x60\x96\x5b\x47\x2b\xe9\x33\x15\x53\x1a\xc5\x30\x55\x12\x78\x75\xf3\x8e\x29\xa3\x48\x09\xcd\x51\x0a\x0d\x51\xaf\x7b\x1c\x34\x54\xa4\x48\xc3\xf8\x37\x9b\x30\x65\x18\x67\x57\xd4\x41\xf6\xdd\x16\xec\xab\xd1\xca\xc0\x28\xac\xc7\x6b\xac\x56\xe6\x81\x39\xd0\x51\x20\xf2\x5c\x03\x27\x5b\xc8\x94\x2b\x69\x0d\xcf\x1d\x48\x9b\xe5\x16\x21\x0e\x18\xaa\x47\xc0\x28\x38\x1d\x96\xa7\xc3\x80\xa5\x0e\x26\x51\x10\x0a\x44\x20\x0c\x55\x96\x84\x2f\xb2\x2b\x64\x37\x37\xc9\xd2\xe1\x96\x52\xbd\xde\x49\xd9\xeb\x9d\xb4\x12\x6b\xb0\xfb\xc8\x0d\xfb\xe5\xb0\xdf\x4a\xac\x42\xee\xe5\xec\xe4\xa4\xec\x9d\xb4\x74\x56\x63\xf7\x91\x1b\x1c\x97\x83\xe3\x56\x62\x15\x72\x2f\x67\xfd\xe3\xb2\xd7\x6f\x27\xd6\x60\xf7\xda\xb3\x41\x39\x1c\xb4\xdb\x33\x8f\xdc\xcb\xd9\x69\xbf\xec\x9d\xb6\x2b\x90\x06\xfb\x8a\x9c\x87\x04\x8c\xe6\x39\x44\x81\xca\x44\x02\xa1\xc7\xad\xe1\x9d\x88\x69\x4d\x77\x3e\x28\x7b\xe7\xf5\xec\x97\xd3\xa9\x63\x87\xa0\x3f\x1f\x94\xcf\xc8\xab\xc8\x21\xa8\xdf\xf7\xcb\xf7\xfd\x27\xd4\x55\xe4\x20\x8b\x32\x28\x7b\xcf\x96\xc4\x47\x0e\x42\xdd\x3f\x7b\x4a\xdc\x3f\x2b\x7b\xfd\xb5\x27\xb5\xdf\x7a\x25\x05\x29\x6b\xb8\x8f\xac\x9c\xd8\x57\x84\x9d\x95\x53\x77\x5d\x76\x86\xab\xf9\x37\x4a\xc3\xa5\xd5\xd6\xad\x90\xfc\xda\x17\x43\x10\xef\xd7\xb8\x42\x9a\x6b\xc0\x14\x80\x16\x56\x28\x55\x2e\xce\x85\xa3\x79\xe3\x49\x98\xa4\xd0\xc2\xdd\x65\x82\xc0\x29\xa1\x17\x01\xbe\x08\x74\x33\x65\xba\x12\x31\x68\xc1\xde\x70\x4a\xc4\xb0\x1a\xac\xf2\xda\x4c\x6b\x25\x71\x62\x0d\x71\x31\x03\xb4\x19\x2c\xb5\x9f\x70\x54\x29\x9d\x17\x4e\x1c\xa0\x2d\x9c\x04\x0c\x67\xa0\xf5\x44\x03\xd0\x9d\x27\x43\xcf\xd0\xa9\x94\x3b\xff\x2b\x77\xea\xcd\xee\x54\x8f\x5c\x0f\x68\x14\x2a\x44\x7d\xed\x3f\x7f\x9a\xe4\xaf\x0f\x52\x5b\xf1\xf0\xf7\x3b\x7f\xc3\x17\xd7\xdd\xc5\x35\xfb\x67\x09\xf6\x9f\x58\x61\xae\xc5\xfc\x03\x33\xd6\xc0\xc7\xe5\xd0\xbf\x35\x7b\xd8\xd0\x8f\xc2\xba\x3b\x38\x1a\xfd\xb0\xf1\x9c\x99\x84\x8b\x3c\x8f\x02\x6d\x13\x65\x2e\xf2\x3c\xf0\x11\x24\xa7\x24\xf1\x58\x3d\x6d\x2b\x14\x21\x9f\xdb\x82\xdb\xaa\x62\xb8\xe7\x01\xc7\xaa\xcc\xf1\x28\x5c\x3b\xea\x75\x62\x35\xf5\xa4\xbe\x6b\x58\xf0\xcd\x9c\xc8\x73\x70\xc1\x78\x14\xc6\x6a\x3a\xae\x31\xcd\x58\x5e\x60\xba\x1c\x38\x1a\xa1\x74\x2a\x27\x86\x4e\xae\x59\xf8\xa6\x62\xee\x97\x57\xdd\x7b\xec\x8c\x47\x61\x9d\x34\xde\x36\x9b\x0b\xa3\x7c\xf1\x55\x9b\xff\x3a\xd3\xab\xa5\xbc\xc2\xe4\x6c\x41\xd0\xbd\xc7\x60\x8f\xd9\x64\x80\x28\x12\xc0\x37\xa6\xd3\xca\x98\x53\xe2\x00\xae\x50\xf8\x9e\xee\x71\xb1\x40\xfb\x98\x93\xd6\x3e\xa8\xdd\xbd\xbd\x71\x6a\xec\x60\x93\x93\x13\x06\xb5\x20\x78\x19\x79\xc3\x6f\x0b\x4e\xae\xad\xff\x3d\x70\x24\x41\x4a\xf2\x89\xd2\xd0\x12\x75\x00\xed\x54\x98\x58\x83\xe3\xda\x26\x9b\x47\xb7\xd6\xba\xfd\xe3\x6a\x2b\xfc\x4f\x27\x6d\x0c\x3c\x01\x03\x4e\x90\x75\xe1\xfd\x22\x76\x20\x9a\xbb\xdb\x9b\x2f\x67\x3b\x2d\x57\x9d\xff\xec\x76\x53\x91\x57\x3d\x98\x01\x43\x18\xe6\x82\x64\x0a\xb8\xa9\x90\x57\xd0\xd2\x66\x99\xdd\x58\xa3\x2b\x60\x4c\x85\x83\x38\x8c\x95\x03\x49\x6a\x0a\x18\xd6\x27\xeb\x26\x8f\x1b\xd3\x27\xd6\xd2\x1e\xe9\x53\xa1\x55\x5c\x75\x04\xdb\x51\xd4\x5f\x2d\xd7\xb3\xc9\x91\xb6\x30\xe4\xe6\x5c\x99\x89\x6d\xb9\xb6\x2f\x27\x4c\xa0\x95\xc9\x0b\x6a\xb9\xde\x05\x82\x0b\x6f\x11\xdc\x27\x25\xb4\x4d\xae\xc1\xf9\x77\xda\x96\x5e\xab\x67\x61\xb8\x78\x96\x6e\x9f\xe4\x5f\xce\x9d\xd5\xba\xf5\xfe\xac\xe4\xee\x32\x53\x07\x08\x26\xbe\xfe\xfd\x7a\x47\x61\xcc\xf0\xd2\x9a\x89\x72\x59\x55\x11\x3b\xb2\xd0\xcc\x7e\x11\x92\xac\xbb\x28\x28\x05\x43\x4d\xc7\xb9\x23\xdb\xc4\xba\xc4\xd2\x37\x81\x38\xb3\x2e\xde\x91\xc4\xbf\x61\x4d\xc1\x5d\xc8\xaa\x04\x77\x24\xb1\x2e\x11\x46\x3d\x56\x66\xae\xcc\x54\x11\xec\x48\xd4\xfc\xe6\xe0\x73\x26\x94\x7e\x9d\x23\xf4\x1d\x5d\xd5\xe1\x55\x7f\x11\xfd\x17\x00\x00\xff\xff\x1f\x5d\x81\xc7\x33\x12\x00\x00")

func loginHtmlBytes() ([]byte, error) {
	return bindataRead(
		_loginHtml,
		"login.html",
	)
}

func loginHtml() (*asset, error) {
	bytes, err := loginHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "login.html", size: 4659, mode: os.FileMode(436), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _baseHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x58\x4d\x73\xdb\x36\x13\xbe\xeb\x57\xf0\xe5\x7b\xf0\x25\x10\x2d\xc5\x96\x9d\x44\xf4\x4c\xc7\x6e\x67\x72\x4a\xa7\x71\x0e\x99\xb6\x93\x41\xc0\x15\x09\x1b\x04\x10\xec\x52\xa2\xd2\xe9\x7f\xef\x00\xa4\x14\xda\x96\x1d\x52\x1f\x17\x91\x8b\x7d\x9e\x07\xfb\xa1\x25\xa8\xf9\xff\x6e\x3e\x5c\xdf\x7e\xfe\xfd\xd7\xa8\xa0\x52\x5d\x8d\xe6\xfe\x2b\x52\x5c\xe7\x69\x0c\x3a\x8e\x74\xce\xb8\xb5\x69\x2c\x09\xd7\xa6\x32\x5a\x49\x0d\xbf\x58\x1b\x16\x84\x32\xfc\x3e\x12\x8a\x23\xa6\xf1\xd7\x3c\xf6\x68\xe0\xd9\xd5\x28\x8a\xa2\x68\x5e\x02\xf1\xa8\x20\xb2\x0c\xbe\x55\x72\x99\xc6\xd7\x46\x13\x68\x62\xb7\x6b\x0b\x71\x24\x9a\xbb\x34\x26\xa8\x29\xf1\xaa\xef\x22\x51\x70\x87\x40\x69\x45\x0b\x76\x19\x27\x5d\x22\xcd\x4b\x48\xe3\xa5\x84\x95\x35\x8e\x3a\xf0\x95\xcc\xa8\x48\x33\x58\x4a\x01\x2c\xdc\xbc\x8a\xa4\x96\x24\xb9\x62\x28\xb8\x82\x74\x32\x3e\x8d\x5b\x2a\x92\xa4\x20\xb2\x3c\x87\x70\x75\xf5\x9e\x4e\x30\xfa\x6c\xaa\xe8\x43\x08\x6c\x9e\x34\xe6\xc6\x59\x49\x7d\x1f\x39\x50\x69\xcc\xad\x55\xc0\xc8\x54\xa2\x60\x52\x18\xcd\xac\x03\x61\x4a\x6b\x10\xb2\x38\x42\xf9\x1d\x30\x8d\xcf\x2f\xea\xf3\x8b\x38\x2a\x1c\x2c\xd2\x38\xe1\x88\x40\x98\xc8\x32\x4f\x9e\xa0\x83\xe7\xd8\xea\x7c\x1b\xe2\x40\xa9\xc9\xe4\xac\x9e\x4c\xce\x7a\x89\xb5\xbe\x87\xc8\x5d\x4c\xeb\x8b\x69\x2f\xb1\xe0\x79\x50\x64\x67\x67\xf5\xe4\xac\x67\x64\x8d\xef\x21\x72\xb3\xd3\x7a\x76\xda\x4b\x2c\x78\x1e\x14\xd9\xf4\xb4\x9e\x4c\xfb\x89\xb5\xbe\x07\xd5\x6c\x56\x5f\xcc\xfa\xd5\xcc\x7b\x1e\x14\xd9\xf9\xb4\x9e\x9c\xf7\x6b\x90\xd6\xf7\x19\x39\xef\x12\x47\xb4\xb6\x90\xc6\xb2\xe4\x39\x24\xde\x6f\x07\xef\x82\x2f\x1b\xba\x37\xb3\x7a\xf2\xa6\xd9\xfd\x76\x3b\x8d\xed\x18\xf4\x6f\x66\xf5\x23\xf2\x60\x39\x06\xf5\xeb\x69\xfd\x7a\xfa\x80\x3a\x58\x8e\x92\x94\x59\x3d\x79\x94\x12\x6f\x39\x0a\xf5\xf4\xf2\x21\xf1\xf4\xb2\x9e\x4c\x77\x8e\x6a\x5f\x7a\x29\x38\x49\xa3\x99\xb7\x74\x46\xf6\x7b\xc2\x93\xce\xd4\xdd\x85\x2e\xb1\x8b\xbf\x95\x0a\xae\x8d\x32\xae\x43\xf2\xff\x29\xbf\x00\xfe\x7a\x47\x54\x48\x6b\x05\x58\x00\xd0\x26\x14\x2a\xa4\xcb\x2c\x77\xb4\x6e\x63\xe2\x3a\xaf\x14\x77\x5f\x4a\x4e\xe0\x24\x57\x1b\x03\xdb\x18\xc6\xa5\xd4\x63\x81\x18\xf7\x60\x6f\x39\x05\x62\x12\x16\x03\xae\xcf\xb6\x3a\xc0\x85\xd1\xc4\xf8\x0a\xd0\x94\xb0\xd5\x7e\xc0\xf1\x4c\x24\x0e\xd0\x54\x4e\x00\x26\x2b\x50\x6a\xa1\x00\xe8\x8b\x27\xc3\xc0\xf0\x54\xb9\x29\x76\x78\xe6\x76\xc2\x0b\x1e\xcd\xb5\xff\xfc\xa9\xf3\xbf\xde\x86\xa7\xfb\xdf\xaf\xfc\x0d\xdb\x5c\x8f\xb7\x4f\xfd\x7f\xb6\xce\xfe\x93\x49\xb4\x8a\xaf\xdf\x46\xda\x68\x78\xb7\x5d\xfa\xb7\x61\x4f\x5a\xfa\x79\xd2\x1c\x0f\x46\xf3\xaf\x26\x5b\x3f\x38\x38\x8c\xe6\x92\x90\xad\x4d\xc5\x9a\x23\x06\xf3\x9e\xe0\xae\xe6\xc9\x6e\xfb\x68\x9e\xc9\x65\x54\x49\xe6\x4f\x04\x1b\xa6\x95\xe3\xd6\x82\x8b\x23\xc5\xd7\xa6\x22\xc6\x95\xcc\x75\x1a\x0b\xd0\x04\x2e\x42\xe2\xfe\xe0\xd0\xac\xa5\xb1\x33\xab\xf8\x6a\x9e\x64\x72\xd9\x92\xb5\x24\xb6\xc2\xe2\xc7\xc2\x23\xf5\x85\x31\xb4\x6b\x57\xad\x7d\x34\x9a\xa3\x70\xd2\x52\x84\x4e\x3c\xdf\x76\x77\xdb\xab\xf1\x1d\x7a\xad\x06\x74\x35\x14\xcd\x9c\xa9\x08\x0e\xe4\x28\x01\x91\xe7\x80\xa1\xeb\x0e\xa3\xe2\x5a\xfa\xdf\xcf\x31\x98\x9c\xe4\x47\xa0\x11\xc6\xdc\xcb\xa3\x84\x86\xdc\x1f\x29\xbf\xef\x1d\xdb\x4f\x26\xcd\x1e\x8c\xac\x92\x4d\xfd\xdd\x53\xcb\xde\x9c\xe4\xb8\x46\xc5\x09\x9e\x5a\x0e\xe7\x64\xca\xf8\xdf\x2e\x43\xe2\x24\x05\x5b\x48\x05\x3d\xbd\x8e\xa0\x5d\x70\x9d\x29\x70\x4c\x99\xfc\xe5\xd5\x9f\x69\x85\xe3\x8f\x06\x4d\x98\x60\xc1\x1d\x64\x49\x26\x1d\x08\x92\x4b\xc0\xa4\x99\x4e\x7b\xc3\x9b\x31\xb2\x37\x7c\xc9\x95\xcc\xc2\x13\x73\x50\xb2\x3e\xfd\xf1\x7e\x90\x3f\x68\x61\x32\xa9\xf3\x41\xa0\x6f\x4e\x98\x0c\x58\x0e\x1a\x1c\x27\xe3\x92\xbb\x8d\xed\x48\x34\x5f\x3e\xdd\xfe\x76\xb9\x57\x93\x34\xf8\x47\xb7\x3d\x8b\x20\x4c\x59\xbe\x98\xee\x93\x8e\xb3\xe5\x24\x0a\xc0\xf1\x1d\x9e\xf4\xaf\x6f\xf3\x35\xac\x27\x44\x85\x64\xca\x0f\xfa\xba\xe0\x3a\xef\x1b\xca\x06\x6b\xf4\x42\xe6\x1f\xc1\xf9\x17\xea\x61\xd0\xa6\x7d\x7f\x0e\x3d\xd9\xa5\x5a\x69\x72\x6b\x26\xf5\xc2\xbc\x90\x9f\x1d\xc8\x4e\xff\x13\x28\xa9\x6d\x45\x2f\x11\x3c\xe9\x02\x2c\xcc\x2a\x33\x2b\xed\x4b\x69\x1d\x20\x42\x96\x7c\x6c\x6d\xed\x2c\xe8\x4f\xf6\x63\xb8\xbb\x7b\x4f\xc0\xb6\xbb\x4b\x36\xa6\x9e\xd5\xe7\xd6\xf6\x4c\x7e\x85\xe0\xba\x59\xe0\x15\x15\xc6\xc9\xef\x61\x10\xdc\x00\x71\xa9\xf0\x66\xb3\xbc\x27\x27\x39\x80\xbd\x38\x3e\x21\xb8\x1b\xc9\x95\x19\xd8\x51\x01\xbc\x89\x04\xae\x8d\x26\x67\x94\xea\x3d\x1b\x03\x5c\xec\x85\xc2\x41\xfb\x34\x2e\xe7\xba\xcd\xf5\x70\xc1\x07\xe8\x03\x84\x51\x18\x0b\xe3\x61\x04\x08\xd0\xad\x30\x02\xb0\x2c\x34\xcb\x38\x1b\x58\x68\xcf\xd4\x81\x0f\xce\xc2\x06\xaf\x24\xd2\x70\xb4\xbf\xe4\x7a\x3d\x3c\xf9\x1b\xe0\x33\x69\x4b\xfc\x3b\x4a\x78\x67\x09\xff\x8b\xfe\x17\x00\x00\xff\xff\xc2\x26\x51\xc7\x28\x15\x00\x00")

func baseHtmlBytes() ([]byte, error) {
	return bindataRead(
		_baseHtml,
		"base.html",
	)
}

func baseHtml() (*asset, error) {
	bytes, err := baseHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "base.html", size: 5416, mode: os.FileMode(436), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _errorHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x54\xc1\x6e\xdb\x30\x0c\xbd\xe7\x2b\x58\x5d\x72\x99\xa3\xae\xc3\xb0\x61\xb3\x0d\x14\x6d\x31\x14\x18\xd0\x62\xc9\xa5\xa7\x40\x91\x98\x58\xa8\x22\xba\x26\xdd\x2c\x7f\x3f\xc8\x76\xba\xba\xd9\xb0\x16\xd8\xc9\x92\xf8\xf8\xf8\xde\x83\xa5\xfc\xe4\xf2\xe6\x62\x71\x77\x7b\x05\x95\x6c\x43\x39\xc9\xd3\x07\x82\x89\x9b\x42\x61\x54\xe9\x00\x8d\x2b\x27\x00\xf9\x16\xc5\x40\x25\x52\x67\xf8\xd0\xfa\xc7\x42\x5d\x50\x14\x8c\x92\x2d\xf6\x35\x2a\xb0\xfd\xae\x50\x82\x3f\x45\x27\x9a\xaf\x60\x2b\xd3\x30\x4a\xd1\xca\x3a\xfb\xac\x40\x77\x3c\xe2\x25\x60\x79\x2d\x53\x86\x3b\x6a\xe1\x26\x06\x1f\x31\xd7\xfd\x71\x02\x04\x1f\xef\xa1\xc1\x50\x28\x96\x7d\x40\xae\x10\x45\x41\xd5\xe0\xba\x50\x86\x19\x85\xb5\x65\xd6\x5d\x71\x66\x99\x95\x7e\x4b\xdb\x9a\xa2\x64\x66\x87\x4c\x5b\x9c\x6d\x7d\x7c\xc9\xd0\x35\x4c\xa5\xf2\x8d\xab\x4d\x23\xfb\xa1\xb5\x41\xa6\xb6\xb1\xc8\x7a\x87\x21\xac\x03\xa2\x2c\x13\x15\xa7\xfe\x69\x37\x77\xfa\x7b\xee\x14\x64\x5f\x63\x31\xed\xb2\x48\x80\x72\x92\xeb\x3e\xc9\x7c\x45\x6e\x3f\xe4\x8a\x0d\x78\x57\xa8\x7e\xa9\x3a\x0d\xce\x3f\x82\x0d\x86\xb9\x50\x43\xa2\xdd\xf9\x50\x49\xe8\x40\x1b\x52\x65\x6e\x06\x6b\x33\xad\xca\x5c\x9b\x32\xd7\xce\x3f\x76\x14\xfd\xa2\x9f\x87\x4d\x39\x99\xe4\x27\x59\x06\xf3\xef\xd7\x97\x57\x73\x98\x2f\xce\x7f\x2c\x20\xcb\xca\xc9\x13\x21\x07\xef\xf0\xfd\xbf\xc6\x57\x67\x87\xc2\xae\xf2\x82\x90\xac\x2d\x4d\xf0\x9b\xb8\xb4\x18\x25\xe9\xff\x78\x7a\x9a\xeb\xea\xec\xf5\x0d\x37\x54\xf3\x3b\x90\xca\x33\xec\x0c\x43\x24\x01\x6e\xeb\x9a\x18\x1d\x08\x41\x65\xea\x1a\xe3\x81\xf2\xc9\xd7\xc1\xe7\x48\xff\xa7\xe7\x31\xfd\xd1\xc1\xb8\xf6\xd0\x92\x20\x2f\x13\xc4\xf8\x38\xa4\x7f\x0c\x5b\xb5\x22\x14\xb3\x5e\x70\x67\x21\x3b\x88\x7f\xc2\x8f\x3b\x1c\xd9\x51\x0d\x20\x37\x20\xa6\xd9\xa0\x14\x6a\xb9\x0a\x26\xde\x1f\xfe\xca\x74\x99\xf8\x8b\xd6\x1b\xbf\x99\x6d\xbc\xac\x88\xee\x79\xe6\x49\x7b\xe1\x3d\xb5\xd4\x5d\x0c\x3d\x98\xd0\x8e\x2c\x6b\x1f\xa5\x21\xd7\x5a\xf1\x14\x67\xe9\x8e\xbd\x18\x05\x70\x49\xb6\xdd\x62\x14\x93\x20\x63\x19\xda\x8c\x34\x1f\x72\xfc\x8b\x09\x70\x64\xcf\x5e\xeb\xc4\xd4\xde\x3d\x1f\x7c\x24\xeb\xfc\xf6\xfa\xff\x4a\xfb\xf0\xf6\x90\xa5\x6a\x57\x33\x4b\xdb\x51\xbe\x47\x4a\x73\xae\x4d\x3c\x0c\xeb\x9b\xb2\xf4\x30\x1c\x01\x01\xe6\xdd\x8b\x00\x96\x1c\x02\x45\xf8\xd6\x81\x5f\xd2\xe9\xc4\x57\xbe\xc1\xee\x68\xfb\x6c\x73\x7c\xc1\x87\xcf\xf0\xa0\xe8\xfe\x05\xff\x15\x00\x00\xff\xff\xd9\x5f\x00\xa1\xd2\x05\x00\x00")

func errorHtmlBytes() ([]byte, error) {
	return bindataRead(
		_errorHtml,
		"error.html",
	)
}

func errorHtml() (*asset, error) {
	bytes, err := errorHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "error.html", size: 1490, mode: os.FileMode(436), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _apidocumentationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x55\x5f\x8f\xe3\x34\x10\x7f\xa6\x9f\x62\xf0\x81\x0a\x12\x69\x16\xd0\x49\xbb\xcd\x1f\xe9\xd4\xe3\x01\x09\x74\x08\xdd\xcb\x0a\xd0\xca\xeb\x4c\x12\xb3\x8e\x6d\xec\x49\xbb\x05\xf1\xdd\x91\xe3\x36\x4d\xda\xee\x0a\xf0\x8b\x9d\xf9\xf3\x9b\xdf\x8c\xc7\x93\xfc\xd3\xf7\x1f\x36\x1f\xef\x7f\xfa\x0e\x5a\xea\x54\xb9\xc8\xc3\x06\x8a\xeb\xa6\x60\xa8\x59\xb9\x00\xc8\x5b\xe4\x55\xb9\xf8\x04\x00\xf2\x0e\x89\x43\x4b\x64\x13\xfc\xa3\x97\xdb\x82\x6d\x8c\x26\xd4\x94\x7c\xdc\x5b\x64\x20\xe2\x57\xc1\x08\x9f\x29\x0d\x50\x19\x88\x96\x3b\x8f\x54\xf4\x54\x27\xb7\x0c\xd2\x00\x39\xac\x9c\x24\x29\x2c\xbf\xa7\xa5\x87\x7b\xd3\xc3\x07\xad\xa4\xc6\x3c\x8d\xe2\xc5\x68\xa6\xa4\x7e\x02\x87\xaa\x60\x9e\xf6\x0a\x7d\x8b\x48\x0c\x5a\x87\x75\xc1\xb8\xf7\x48\x3e\x15\xde\xa7\x83\x72\x25\xbc\x67\x93\x10\xff\xd2\xb7\x36\x9a\x12\xbe\x43\x6f\x3a\x5c\x75\x52\xcf\x61\x22\xca\xe0\xb4\xa4\x56\xba\xca\x72\x47\xfb\x83\xbb\x43\x6f\x7a\x27\xd0\xa7\x3b\x54\xaa\x56\x88\xf4\x10\xe0\x7c\xc0\x58\x0e\xb1\x97\xa7\xd8\x4b\xa0\xbd\xc5\x62\x39\xd4\x27\x18\x8c\x54\x21\x1f\xac\x4e\x79\x0f\xeb\x17\xdd\xfc\xba\x16\xca\xf0\xa7\xdf\xbe\x0a\x1f\xc9\xf1\xbc\x3a\x9e\xe1\xaf\x99\x43\x58\x95\xf4\x56\xf1\xfd\x1a\xb4\xd1\x98\xcd\xd4\x7f\xcf\xe1\x57\x75\xaf\x94\x17\x0e\x51\x57\x46\xf4\x1d\x6a\xe2\x24\x8d\xbe\x00\x55\x58\xd3\x1a\x6e\xb2\x33\xb1\x93\x4d\x7b\x4d\xfe\x67\x22\x75\x85\xcf\x17\x9a\x8e\xbb\x46\xea\x84\x8c\x5d\xc3\xd7\x37\xf6\xf9\x9c\xdc\x8c\x9b\x24\xbf\x37\xbd\x19\xba\x22\xb4\x20\xba\x2b\xb9\xee\x64\x45\x6d\x00\xbb\xf9\x3c\x83\x47\x2e\x9e\x1a\x67\x7a\x5d\xad\xe1\xcd\xdd\xb7\x77\x6f\xef\x6e\x33\x68\x31\x92\xbc\x0d\xf1\x20\x1b\xa9\x7d\x93\xcd\xd8\xbc\x7d\x9d\xcd\x1b\xc7\x3b\xf5\xf0\x7a\x91\xce\x2a\x0f\x2f\xe1\xe5\xe9\xf9\x55\x4f\x3a\x8c\x71\x2b\x67\x61\xa2\xb1\x4f\xb9\x95\x89\x30\xda\x1b\x85\x89\x0a\x29\x25\xd4\x62\x17\x3b\xfe\xb2\xc5\x85\xe2\xde\x17\x6c\x30\x09\xaf\x38\x4f\xe3\x2b\x5e\xe4\x8f\xa6\xda\x83\x6e\x12\x6e\x6d\xc1\x42\x56\x9b\x08\xfa\xce\xda\xd1\x2d\x88\xc7\x60\xc1\x81\x41\x70\xad\xe4\xf6\x68\x71\x79\x39\x71\x56\x4c\x4c\x0e\xc3\x80\xc5\x16\x1f\x34\xb2\x2a\x98\x32\x8d\x61\x65\xce\x0f\xe9\xa6\xac\xcc\x53\x5e\xe6\x69\x25\xb7\x13\xcb\x03\x86\x97\x8d\x4e\x76\x8e\x5b\x36\x3e\xc6\xd1\xf1\xa2\x50\x81\x75\x3a\x25\xb6\x0a\x12\x06\x95\xd9\x69\x65\x78\x55\xbe\x3f\x1c\xe0\xe7\x77\x3f\xfe\x00\xde\xa2\x90\xb5\x14\x83\x73\xe0\x10\xa3\x1f\x89\x1c\x0e\x87\x6d\x9e\xfd\x0b\xcf\x66\x92\xea\xe4\x5d\xcf\x8a\x19\xc2\xa3\x03\xef\xc4\x7f\xca\x40\x7a\xfe\xa8\x30\xde\x78\xe2\x77\x92\x44\x8b\x6e\x14\xc7\x08\x4a\x86\x41\xdc\xa0\x46\xc7\xc9\x9c\xb4\xc3\x3c\x85\x71\x4e\x25\xc2\x28\xc5\xad\xc7\xaa\xcc\xd3\x2b\xdc\x66\x65\x38\x65\xef\x85\x93\x96\x5e\x22\x1e\xb5\xf3\x26\xdd\x86\xea\xb8\xd5\xef\x3e\xdc\x70\x34\x28\xff\x07\xce\x75\x80\xc0\xf2\xb3\x95\x36\x1b\xa3\x6b\x25\x05\x7d\xf1\x65\xb6\x98\x18\xa5\xa1\x69\xc3\x1e\xff\x6a\xff\x04\x00\x00\xff\xff\xdf\x2a\x8a\x37\xe6\x06\x00\x00")

func apidocumentationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_apidocumentationHtml,
		"apidocumentation.html",
	)
}

func apidocumentationHtml() (*asset, error) {
	bytes, err := apidocumentationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "apidocumentation.html", size: 1766, mode: os.FileMode(436), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _smsconfirmationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\xcc\x72\x11\xec\x65\x69\x39\x0e\x0a\x14\x8e\xa4\x4b\xda\x43\x4f\xe9\x21\x97\x9c\x02\x46\x1a\x89\xd3\x50\xa4\x4a\x8e\x6c\xab\x41\xfe\x7b\x41\x49\x4e\x2c\x27\x29\x8a\xd0\x07\x51\xf3\xf1\xe6\xf1\xf9\x89\xe9\x3f\x5f\xae\xaf\x6e\x6e\xbf\x7f\x05\xcd\x8d\xc9\x17\x69\x7c\x80\x51\xb6\xce\x04\x5a\x11\x03\xa8\xca\x7c\x01\x00\x90\x36\xc8\x0a\x34\x73\x2b\xf1\x67\x47\xdb\x4c\x5c\x39\xcb\x68\x59\xde\xf4\x2d\x0a\x28\xc6\xb7\x4c\x30\xee\x39\x89\x40\x97\x50\x68\xe5\x03\x72\xd6\x71\x25\x3f\x8b\xe4\x18\xc8\xaa\x06\x33\xb1\x25\xdc\xb5\xce\xf3\x51\xfb\x8e\x4a\xd6\x59\x89\x5b\x2a\x50\x0e\x2f\xff\x03\x59\x62\x52\x46\x86\x42\x19\xcc\xce\x97\x2b\x31\x41\x31\xb1\xc1\xfc\x1b\xff\x17\xe0\xd6\x75\x70\x6d\x0d\x59\x4c\x93\x31\x3c\x96\x18\xb2\x0f\xe0\xd1\x64\x22\x70\x6f\x30\x68\x44\x16\xa0\x3d\x56\x99\x50\x21\x20\x87\xa4\x08\x21\x19\x92\xcb\x22\x84\x67\x9a\x7f\xd9\x58\x39\xcb\x52\xed\x30\xb8\x06\x97\x0d\xd9\xd7\x18\x63\x0b\x6b\xf2\x65\xab\x3c\xf7\x53\xb3\xc7\xe0\x3a\x5f\x60\x48\x76\x68\x4c\x65\x10\xf9\x2e\x82\x85\x01\xe1\xf5\x64\xee\x5b\x9c\xd4\x8d\x05\xd3\x84\xa1\x62\xdc\xc7\xb5\x2c\x9c\xad\xc8\x37\x8a\xc9\x59\xd9\xaa\x1a\xe1\xf1\x39\x19\xd7\xa0\xe8\x06\xce\x57\xab\xb3\xcb\x59\xe2\x5e\x15\x0f\xb5\x77\x9d\x2d\x65\xe1\x8c\xf3\x1b\xf8\x17\xcb\xf8\x9b\x97\x1d\x72\x55\x55\xcd\x13\x1a\xa9\xd6\x3c\x20\x6f\xf5\x3c\xd5\x28\x5f\x93\xdd\xc0\xea\x25\xfc\xb4\xf8\x13\xe5\x18\x62\x45\x16\xfd\x09\xfb\x92\x42\x6b\x54\xbf\x81\xca\xe0\x7e\x3e\x24\x46\x64\x49\x1e\x8b\x88\xb3\x89\x44\xbb\xc6\xce\x6b\x7e\x74\x81\xa9\xea\xe5\x64\xb6\x0d\x14\x68\x19\xfd\xbc\x48\x19\xaa\xad\x24\xc6\x26\xbc\x5d\xf0\xae\x84\x47\x12\x9c\x7d\xe0\xa8\x7a\x7d\x72\xda\x83\xd6\xab\x61\xbd\xa3\x29\xac\x57\xed\xfe\x23\xd3\x2e\x3e\x30\x6d\x3e\x6b\x90\x3d\xda\x3f\xd0\x2f\xdc\xc0\xfa\xd3\x9c\xc8\x61\x37\x1a\x35\x99\x9c\x9a\x26\xe3\x9d\x92\xde\xbb\xb2\x9f\x6e\x18\xf4\x40\x65\x26\xc6\xed\xc1\xd9\x25\x6d\xa1\x30\x2a\x84\x4c\x4c\xff\x97\x78\xf1\xf9\x71\xb6\x71\xf7\x64\x50\x1a\x57\x3b\x91\xa7\x6a\xfa\xde\x12\x91\xa7\x89\xca\xd3\xa4\xa4\xed\x84\x38\x6e\x47\x02\xe8\xf3\xc5\xc9\x88\xb9\x56\xef\xd0\x18\xc4\x3b\x26\xa2\xd7\xcf\x3c\x4a\x39\xf9\x53\x9e\xc3\x4e\x13\x23\xc4\xaf\xf5\x6e\x30\xd4\xdd\xe8\x24\x91\x3f\x3e\x0e\x51\x78\x7a\x4a\x13\xbd\x3e\x06\xba\x78\x13\xe8\x6d\x08\xdc\xb3\x57\x2f\x38\x17\x27\x27\x9c\x1e\x93\xc4\xc9\x78\xbb\xff\x0e\x00\x00\xff\xff\xaf\xff\xf2\x51\xee\x05\x00\x00")

func smsconfirmationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_smsconfirmationHtml,
		"smsconfirmation.html",
	)
}

func smsconfirmationHtml() (*asset, error) {
	bytes, err := smsconfirmationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "smsconfirmation.html", size: 1518, mode: os.FileMode(436), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _emailconfirmationHtml = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x54\x4d\x6f\xdb\x38\x10\xbd\xfb\x57\xcc\x72\x11\xec\x65\x65\x3a\x0e\x0a\x14\x8a\xa4\x4b\xda\x43\x4f\xe9\x21\x97\x9c\x02\x56\x1a\x99\xd3\x52\xa4\x4a\x8e\x3f\xd4\x20\xff\xbd\xa0\xc4\x24\x96\x93\x14\x45\x78\xb0\xa8\xf9\x78\x6f\xf8\xfc\xc4\xe2\x9f\x4f\xd7\x57\x37\xb7\x5f\x3f\x83\xe6\xce\x54\x8b\x22\x3e\xc0\x28\xbb\x29\x05\x5a\x11\x03\xa8\x9a\x6a\x01\x00\x50\x74\xc8\x0a\x34\x73\x9f\xe1\xcf\x2d\xed\x4a\x71\xe5\x2c\xa3\xe5\xec\x66\xe8\x51\x40\x3d\xbd\x95\x82\xf1\xc0\x32\x02\x5d\x42\xad\x95\x0f\xc8\xe5\x96\xdb\xec\xa3\x90\xc7\x40\x56\x75\x58\x8a\x1d\xe1\xbe\x77\x9e\x8f\xda\xf7\xd4\xb0\x2e\x1b\xdc\x51\x8d\xd9\xf8\xf2\x3f\x90\x25\x26\x65\xb2\x50\x2b\x83\xe5\xf9\x72\x25\x12\x14\x13\x1b\xac\xbe\xf0\x7f\x01\x6e\xdd\x16\xae\xad\x21\x8b\x85\x9c\xc2\x53\x89\x21\xfb\x03\x3c\x9a\x52\x04\x1e\x0c\x06\x8d\xc8\x02\xb4\xc7\xb6\x14\x2a\x04\xe4\x20\xeb\x10\xe4\x98\x5c\xd6\x21\x3c\x8d\xf9\x97\x8d\xad\xb3\x9c\xa9\x3d\x06\xd7\xe1\xb2\x23\xfb\x12\x63\x6a\x61\x4d\xbe\xe9\x95\xe7\x21\x35\x7b\x0c\x6e\xeb\x6b\x0c\x72\x8f\xc6\xb4\x06\x91\xef\x22\x58\x18\x11\x5e\x32\xf3\xd0\x63\x52\x37\x16\x24\x86\xb1\x62\xda\xc7\xb5\xac\x9d\x6d\xc9\x77\x8a\xc9\xd9\xac\x57\x1b\x84\xfb\xa7\x64\x5c\xa3\xa2\x39\x9c\xaf\x56\x67\x97\xb3\x44\xed\x8c\xf3\x39\xfc\xdb\xb6\xed\x3c\xa1\x91\x36\x9a\xc7\x96\x9d\x9e\xa7\x3a\xe5\x37\x64\x73\x58\x3d\x87\x1f\x16\x7f\x9a\x25\x86\x58\x91\x45\x7f\x32\x56\x43\xa1\x37\x6a\xc8\xa1\x35\x78\x98\x93\xc4\x48\xd6\x90\xc7\x3a\xe2\xe4\x71\xd0\x6d\x67\xe7\x35\xdf\xb7\x81\xa9\x1d\xb2\xe4\xa2\x1c\x6a\xb4\x8c\x7e\x5e\xa4\x0c\x6d\x6c\x46\x8c\x5d\x78\xbd\xe0\x4d\x6d\x8e\x24\x38\x7b\xc7\x51\xf5\xfa\xe4\xb4\x8f\x5a\xaf\xc6\xf5\x86\xa6\xb0\x5e\xf5\x87\xf7\xb0\x5d\xbc\x83\x6d\xce\x35\xca\x1e\x7d\x1d\xe8\x17\xe6\xb0\xfe\x30\x1f\x24\xfe\x16\x32\x39\xaf\x90\xd3\x1d\x51\x7c\x73\xcd\x90\x6e\x0c\xf4\x40\x4d\x29\xa6\xed\xa3\x53\x1b\xda\x41\x6d\x54\x08\xa5\x48\x7f\x93\x78\xf6\xed\x98\x8d\x3d\xc6\x6d\x9c\xa8\x0a\x95\xbe\x1a\x29\xaa\x42\xaa\xaa\x90\x0d\xed\x12\xce\xb4\x9d\x68\xd1\x57\x8b\x13\xe0\xb9\x30\x6f\x90\x8f\x4a\x1d\xd3\xeb\xf5\x63\xba\x6b\xb2\x64\xc6\xec\x1c\xf6\x9a\x18\x21\x7e\x73\x77\xa3\x7b\xee\x26\xdb\x88\xea\xfe\x7e\x8c\xc2\xc3\x43\x21\xf5\xfa\x18\xe8\xe2\x55\xa0\xd7\x21\xf0\xc0\x5e\x3d\xe3\x5c\x9c\x9c\x30\x3d\x92\xb0\x72\xba\xa3\x7f\x07\x00\x00\xff\xff\xd3\x9f\x62\xda\xb4\x05\x00\x00")

func emailconfirmationHtmlBytes() ([]byte, error) {
	return bindataRead(
		_emailconfirmationHtml,
		"emailconfirmation.html",
	)
}

func emailconfirmationHtml() (*asset, error) {
	bytes, err := emailconfirmationHtmlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "emailconfirmation.html", size: 1460, mode: os.FileMode(436), modTime: time.Unix(1540312048, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"index.html": indexHtml,
	"registration.html": registrationHtml,
	"login.html": loginHtml,
	"base.html": baseHtml,
	"error.html": errorHtml,
	"apidocumentation.html": apidocumentationHtml,
	"smsconfirmation.html": smsconfirmationHtml,
	"emailconfirmation.html": emailconfirmationHtml,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"apidocumentation.html": &bintree{apidocumentationHtml, map[string]*bintree{}},
	"base.html": &bintree{baseHtml, map[string]*bintree{}},
	"emailconfirmation.html": &bintree{emailconfirmationHtml, map[string]*bintree{}},
	"error.html": &bintree{errorHtml, map[string]*bintree{}},
	"index.html": &bintree{indexHtml, map[string]*bintree{}},
	"login.html": &bintree{loginHtml, map[string]*bintree{}},
	"registration.html": &bintree{registrationHtml, map[string]*bintree{}},
	"smsconfirmation.html": &bintree{smsconfirmationHtml, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

